name: build docker image and deploy

on:
  push:
    # 以下路径/文件才会触发，关于路径条件官方文档https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#onpushpull_requestpaths
    paths:
      - '.github/**'
      - 'src/**'
      - 'Dockerfile'
      - '.dockerignore'

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      # docker 私库地址
      DOCKER_REGISTRY_URL: registry.cn-shenzhen.aliyuncs.com
      # 容器名称
      CONTAINER_NAME: wechat-bot
      # docker run 命令的部分参数 远程服务器run已经写了 name 参数和镜像
      DOCKER_RUN_PARAMS: -p 4300:4300

    steps:
      # - name: 检出代码到本地
      #   uses: actions/checkout@v2
      # # 使用 QEMU 模拟器 Buildx 构建跨平台的镜像
      # - name: 安装 QEMU
      #   uses: docker/setup-qemu-action@v1

      # - name: 安装 Docker Buildx
      #   uses: docker/setup-buildx-action@v1

      # - name: 动态设置环境变量
      #   run: |
      #     fullCommit="${{ github.event.commits[0].id }}"
      #     # 定义变量 以 commit id前7位做版本标识（因为github commit 页面只展示前7位，这里一样方便搜索）
      #     IMAGE_TAG="${DOCKER_REGISTRY_URL}/iamc/wechat-bot:${fullCommit:0:7}"
      #     echo $IMAGE_TAG
      #     # 写入 IMAGE_TAG 到 GITHUB_ENV 环境文件，变成环境变量，后面的流程可以使用 命令语法 https://docs.github.com/cn/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
      #     echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      # - name: 登录docker镜像私库
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ${{env.DOCKER_REGISTRY_URL}}
      #     username: ${{secrets.DOCKER_USERNAME}}
      #     password: ${{secrets.DOCKER_PASSWORD}}

      # - name: 构建并推送
      #   uses: docker/build-push-action@v2
      #   with:
      #     platforms: linux/amd64,linux/arm/v7,linux/arm64
      #     tags: ${{env.IMAGE_TAG}}
      #     push: true
        
      - name: 通知服务器更新部署
        uses: appleboy/ssh-action@master
        with:
            host: ${{ secrets.SERVICE_HOSTS }}
            username: ${{ secrets.SERVICE_USERNAME }}
            key: ${{ secrets.SERVICE_PRIVATE_KEY }}
            script: |
              echo "测试是否连通"
              # /root/update_docker.sh ${{env.DOCKER_REGISTRY_URL}} ${{secrets.DOCKER_USERNAME}} ${{secrets.DOCKER_PASSWORD}} ${{env.IMAGE_TAG}} ${{env.CONTAINER_NAME}} ${{env.DOCKER_RUN_PARAMS}}